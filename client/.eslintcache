[{"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\ErrorPage.jsx":"1","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Home\\HomeTopNews.jsx":"2","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Home\\HomeSidebar.jsx":"3","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Routes.jsx":"4","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\QuestionData.js":"5","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestSubmit.jsx":"6","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\App.jsx":"7","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Context.js":"8","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestPreview.jsx":"9","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\InitRegReducer.js":"10","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\ActionTypes.js":"11","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\InitRegAction.js":"12","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Store.js":"13","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\Home.jsx":"14","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\index.js":"15","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Home\\HomeBanner.jsx":"16","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\UtmeRegDetail.jsx":"17","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\Headers.jsx":"18","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\Logout.jsx":"19","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\index.js":"20","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestLogin.jsx":"21","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestPage.jsx":"22","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Helpers\\SetAuthToken.js":"23","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\FinalRegReducer.js":"24","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\RegAuth\\StudentReg.jsx":"25","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\RegAuth\\StudentLogin.jsx":"26","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\RegAuth\\StudentRetrieveID.jsx":"27","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\HeaderNavbar.jsx":"28","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\MainStudentAuth\\MainStudentLogin.jsx":"29","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\MainStudentAuth\\MainStudentRegister.jsx":"30","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\FinalRegAction.js":"31","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\StudentProfilePage.jsx":"32","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\Loading.jsx":"33","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\AcademicStaffReducer.js":"34","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\AcadStaffProfilePage.jsx":"35","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\AcademicStaffAction.js":"36","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\AcademicStaffAuth\\AcademicStaffLogin.jsx":"37","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\DepartmentAction.js":"38","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\AcademicStaffAuth\\AcademicStaffReg.jsx":"39","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\DepartmentReducer.js":"40","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\CoursesAction.js":"41","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\CoursesReducer.js":"42"},{"size":481,"mtime":1609128038129,"results":"43","hashOfConfig":"44"},{"size":2188,"mtime":1609108391304,"results":"45","hashOfConfig":"44"},{"size":6603,"mtime":1609951978428,"results":"46","hashOfConfig":"44"},{"size":2242,"mtime":1610557671673,"results":"47","hashOfConfig":"44"},{"size":3425,"mtime":1609472443984,"results":"48","hashOfConfig":"44"},{"size":2394,"mtime":1609605966152,"results":"49","hashOfConfig":"44"},{"size":1019,"mtime":1610558245690,"results":"50","hashOfConfig":"44"},{"size":310,"mtime":1609017150142,"results":"51","hashOfConfig":"44"},{"size":1493,"mtime":1609473351881,"results":"52","hashOfConfig":"44"},{"size":1306,"mtime":1610129351355,"results":"53","hashOfConfig":"44"},{"size":3028,"mtime":1610821558258,"results":"54","hashOfConfig":"44"},{"size":3175,"mtime":1610683825410,"results":"55","hashOfConfig":"44"},{"size":392,"mtime":1609016497961,"results":"56","hashOfConfig":"44"},{"size":446,"mtime":1609981500327,"results":"57","hashOfConfig":"44"},{"size":449,"mtime":1610671650196,"results":"58","hashOfConfig":"44"},{"size":3819,"mtime":1609400864728,"results":"59","hashOfConfig":"44"},{"size":3694,"mtime":1610562446250,"results":"60","hashOfConfig":"44"},{"size":2294,"mtime":1610597128357,"results":"61","hashOfConfig":"44"},{"size":640,"mtime":1609400288387,"results":"62","hashOfConfig":"44"},{"size":145,"mtime":1609016588841,"results":"63","hashOfConfig":"44"},{"size":3206,"mtime":1610322896036,"results":"64","hashOfConfig":"44"},{"size":4810,"mtime":1610668793857,"results":"65","hashOfConfig":"44"},{"size":251,"mtime":1609016498469,"results":"66","hashOfConfig":"44"},{"size":1441,"mtime":1610129470775,"results":"67","hashOfConfig":"44"},{"size":8059,"mtime":1610771858227,"results":"68","hashOfConfig":"44"},{"size":3392,"mtime":1610322418360,"results":"69","hashOfConfig":"44"},{"size":2293,"mtime":1609979388929,"results":"70","hashOfConfig":"44"},{"size":6529,"mtime":1610683033988,"results":"71","hashOfConfig":"44"},{"size":3458,"mtime":1610323463967,"results":"72","hashOfConfig":"44"},{"size":4445,"mtime":1610322525165,"results":"73","hashOfConfig":"44"},{"size":2522,"mtime":1610668680434,"results":"74","hashOfConfig":"44"},{"size":12982,"mtime":1611002690545,"results":"75","hashOfConfig":"44"},{"size":1697,"mtime":1609016499128,"results":"76","hashOfConfig":"44"},{"size":1534,"mtime":1610555925719,"results":"77","hashOfConfig":"44"},{"size":3001,"mtime":1610770769126,"results":"78","hashOfConfig":"44"},{"size":2711,"mtime":1610668627768,"results":"79","hashOfConfig":"44"},{"size":3441,"mtime":1610558008428,"results":"80","hashOfConfig":"44"},{"size":1773,"mtime":1610668647128,"results":"81","hashOfConfig":"44"},{"size":8636,"mtime":1610682615762,"results":"82","hashOfConfig":"44"},{"size":1498,"mtime":1610559460400,"results":"83","hashOfConfig":"44"},{"size":2410,"mtime":1610992029446,"results":"84","hashOfConfig":"44"},{"size":1855,"mtime":1610839546428,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1d74a9f",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"91"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"101"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"91"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"88"},"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\ErrorPage.jsx",[],["186","187"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Home\\HomeTopNews.jsx",[],["188","189"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Home\\HomeSidebar.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Routes.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\QuestionData.js",[],["190","191"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestSubmit.jsx",[],["192","193"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\App.jsx",["194"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Context.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestPreview.jsx",[],["195","196"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\InitRegReducer.js",["197"],"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERROR, LOGOUT, SET_LOADING } from '../Actions/ActionTypes'\r\n\r\n// Initial State\r\nconst initialState = {\r\n   token: localStorage.getItem('token'),\r\n   isLoading: null,\r\n   isRegID: null,\r\n   newUser: null\r\n}\r\n\r\n// Reducers\r\nexport default (state = initialState, action) => {\r\n   let { type, payload } = action\r\n   switch (type) {\r\n      case USER_LOADED:\r\n         return {\r\n            ...state,\r\n            newUser: payload,\r\n            isRegID: true,\r\n            isLoading: false\r\n         }\r\n      case REGISTER_SUCCESS:\r\n      case LOGIN_SUCCESS:\r\n         // Set token in local Storage\r\n         localStorage.setItem('token', payload.token)\r\n         return {\r\n            ...state,\r\n            ...payload\r\n         }\r\n      case SET_LOADING:\r\n         return {\r\n            ...state,\r\n            isLoading: true\r\n         }\r\n      case REGISTER_FAIL:\r\n      case LOGIN_FAIL:\r\n      case AUTH_ERROR:\r\n      case LOGOUT:\r\n         // Remove token in local Storage\r\n         localStorage.removeItem('token')\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            newUser: null,\r\n            isRegID: false,\r\n            isLoading: false\r\n         }\r\n      default: return state\r\n   }\r\n}",["198","199"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\ActionTypes.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\InitRegAction.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Store.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\Home.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\index.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Home\\HomeBanner.jsx",[],["200","201"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\UtmeRegDetail.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\Headers.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\Logout.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\index.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestLogin.jsx",["202"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\ExamPage\\TestPage.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Helpers\\SetAuthToken.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\FinalRegReducer.js",["203"],"import { STUDENT_AUTH_ERROR, STUDENT_LOGIN_FAIL, STUDENT_LOGIN_SUCCESS, LOGOUT, STUDENT_REGISTER_FAIL, STUDENT_REGISTER_SUCCESS, STUDENT_SET_LOADING, STUDENT_USER_LOADED } from \"../Actions/ActionTypes\"\r\n\r\n\r\n// Initial State\r\nconst initialState = {\r\n   token: localStorage.getItem('token'),\r\n   isValidStudent: null,\r\n   isLoading: null,\r\n   student: null\r\n}\r\n\r\n// Reducers\r\nexport default (state = initialState, action) => {\r\n   let { type, payload } = action\r\n   switch (type) {\r\n      case STUDENT_USER_LOADED:\r\n         return {\r\n            ...state,\r\n            student: payload,\r\n            isValidStudent: true,\r\n            isLoading: false\r\n         }\r\n      case STUDENT_REGISTER_SUCCESS:\r\n      case STUDENT_LOGIN_SUCCESS:\r\n         // Set token in local Storage\r\n         localStorage.setItem('token', payload.token)\r\n         return {\r\n            ...state,\r\n            ...payload\r\n         }\r\n      case STUDENT_SET_LOADING:\r\n         return {\r\n            ...state,\r\n            isLoading: true\r\n         }\r\n      case STUDENT_REGISTER_FAIL:\r\n      case STUDENT_LOGIN_FAIL:\r\n      case STUDENT_AUTH_ERROR:\r\n      case LOGOUT:\r\n         // Remove token in local Storage\r\n         localStorage.removeItem('token')\r\n         return {\r\n            ...state,\r\n            token: null,\r\n            student: null,\r\n            isValidStudent: false,\r\n            isLoading: false\r\n         }\r\n      default: return state\r\n   }\r\n}","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\RegAuth\\StudentReg.jsx",["204"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\RegAuth\\StudentLogin.jsx",["205"],"import React, { useState, useEffect } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, NavLink } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { MoonLoader } from 'react-spinners'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { loginNewNormalUser } from '../../../Data/Actions/InitRegAction'\r\n\r\n\r\nconst StudentLogin = ({ loginNewNormalUser, isRegID, isLoading }) => {\r\n\r\n   let [data, setData] = useState({\r\n      regID: '',\r\n      passcode: ''\r\n   })\r\n   let [modal, setModal] = useState(false)\r\n   let [callbackPSL, setCallbackPSL] = useState(false)\r\n\r\n   let { regID, passcode } = data\r\n\r\n   let textChange = name => e => {\r\n      setData({ ...data, [name]: e.target.value })\r\n   }\r\n\r\n   let toggle = () => {\r\n      setModal(!modal)\r\n   }\r\n\r\n   let handleSubmitNormalLogin = async e => {\r\n      e.preventDefault()\r\n      loginNewNormalUser({ regID, passcode })\r\n\r\n      setCallbackPSL(true)\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (isRegID && callbackPSL) {\r\n         setData({\r\n            ...data,\r\n            regID: '',\r\n            passcode: ''\r\n         })\r\n      }\r\n   }, [callbackPSL])\r\n\r\n\r\n   if (isRegID) {\r\n      if (modal) {\r\n         toggle()\r\n      }\r\n   }\r\n\r\n   if (isRegID && callbackPSL) {\r\n      return <Redirect to=\"/new-student-post-utme-detail\" />\r\n   }\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div>\r\n         <NavLink onClick={toggle} href='#'>Login</NavLink>\r\n         <Modal\r\n            isOpen={modal}\r\n         >\r\n            <ModalHeader toggle={toggle}> Login Form </ModalHeader>\r\n            <ModalBody>\r\n               <form onSubmit={handleSubmitNormalLogin}>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"regNumber\"\r\n                        placeholder=\"Your registration number\"\r\n                        value={regID}\r\n                        onChange={textChange(\"regID\")}\r\n                     />\r\n                     <label htmlFor=\"regNumber\">Registration Number:</label>\r\n                  </div>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"passcode\"\r\n                        placeholder=\"******\"\r\n                        value={passcode}\r\n                        onChange={textChange('passcode')}\r\n                     />\r\n                     <label htmlFor=\"passcode\">Passcode:</label>\r\n                  </div>\r\n                  {\r\n                     isLoading &&\r\n                     <div className=\"my-3\">\r\n                        <MoonLoader size={32} color='#198754' />\r\n                     </div>\r\n                  }\r\n                  {\r\n                     !isLoading &&\r\n                     <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success my-3 px-4 text-capitalize\"\r\n                     >Login</button>\r\n                  }\r\n               </form>\r\n            </ModalBody>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n   isRegID: state.initReg.isRegID,\r\n   isLoading: state.initReg.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginNewNormalUser })(StudentLogin)\r\n","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\RegAuth\\StudentRetrieveID.jsx",["206"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\HeaderNavbar.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\MainStudentAuth\\MainStudentLogin.jsx",["207"],"import React, { useEffect, useState } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, NavLink } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { MoonLoader } from 'react-spinners'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { loginMainStudent } from '../../../Data/Actions/FinalRegAction'\r\n\r\n\r\nconst MainStudentLogin = ({ loginMainStudent, isValidStudent, isLoading }) => {\r\n\r\n   let [data, setData] = useState({\r\n      matricNo: '',\r\n      password: ''\r\n   })\r\n   let [modal, setModal] = useState(false)\r\n   let [callbackMSL, setCallbackMSL] = useState(false)\r\n\r\n   let { matricNo, password } = data\r\n\r\n   let textChange = name => e => {\r\n      setData({ ...data, [name]: e.target.value })\r\n   }\r\n\r\n   let handleSubmit = async e => {\r\n      e.preventDefault()\r\n      loginMainStudent({ matricNo, password })\r\n\r\n      setCallbackMSL(true)\r\n   }\r\n\r\n   let toggle = () => {\r\n      setModal(!modal)\r\n   }\r\n   let clearDefault = () => {\r\n      setData({\r\n         ...data,\r\n         matricNo: '',\r\n         password: ''\r\n      })\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (isValidStudent && callbackMSL) {\r\n         clearDefault()\r\n      }\r\n   }, [callbackMSL])\r\n\r\n\r\n   if (isValidStudent) {\r\n      if (modal) {\r\n         toggle()\r\n      }\r\n   }\r\n\r\n   if (isValidStudent && callbackMSL) {\r\n      return <Redirect to=\"/student-profile-page\" />\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <NavLink onClick={toggle} href='#'>Login</NavLink>\r\n         <Modal\r\n            isOpen={modal}\r\n         >\r\n            <ModalHeader toggle={toggle}> Login Form </ModalHeader>\r\n            <ModalBody>\r\n               <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"matricNo\"\r\n                        placeholder=\"Your matric number\"\r\n                        value={matricNo}\r\n                        onChange={textChange(\"matricNo\")}\r\n                     />\r\n                     <label htmlFor=\"matricNo\">Matric Number:</label>\r\n                  </div>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"password\"\r\n                        placeholder=\"******\"\r\n                        value={password}\r\n                        onChange={textChange('password')}\r\n                     />\r\n                     <label htmlFor=\"password\">Password:</label>\r\n                  </div>\r\n                  {\r\n                     isLoading &&\r\n                     <div className=\"my-3\">\r\n                        <MoonLoader size={32} color='#198754' />\r\n                     </div>\r\n                  }\r\n                  {\r\n                     !isLoading &&\r\n                     <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success my-3 px-4 text-capitalize\"\r\n                     >Login</button>\r\n                  }\r\n               </form>\r\n            </ModalBody>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n   isValidStudent: state.mainStudent.isValidStudent,\r\n   isLoading: state.mainStudent.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginMainStudent })(MainStudentLogin)\r\n","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\MainStudentAuth\\MainStudentRegister.jsx",["208"],"import React, { useEffect, useState } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, NavLink } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { MoonLoader } from 'react-spinners'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { registerMainStudent } from '../../../Data/Actions/FinalRegAction'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nconst MainStudentRegister = ({ registerMainStudent, isValidStudent, isLoading }) => {\r\n\r\n   let [data, setData] = useState({\r\n      isDE: false,\r\n      password: '',\r\n      confirmPassword: ''\r\n   })\r\n   let [modal, setModal] = useState(false)\r\n   let [callbackMSR, setCallbackMSR] = useState(false)\r\n\r\n   let { isDE, password, confirmPassword } = data\r\n\r\n   let textChange = e => {\r\n      const target = e.target;\r\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n      const name = target.name;\r\n      setData({ ...data, [name]: value })\r\n   }\r\n\r\n   let handleSubmit = async e => {\r\n      e.preventDefault()\r\n      if (password.length < 6) return toast.error(\"Password weak\")\r\n      if (password !== confirmPassword) return toast.error(\"Password do not match\")\r\n\r\n      registerMainStudent({ password, isDE })\r\n\r\n      setCallbackMSR(true)\r\n   }\r\n\r\n   let toggle = () => {\r\n      setModal(!modal)\r\n   }\r\n   let clearDefault = () => {\r\n      setData({\r\n         ...data,\r\n         isDE: false,\r\n         password: '',\r\n         confirmPassword: ''\r\n      })\r\n   }\r\n   useEffect(() => {\r\n      if (isValidStudent && callbackMSR) {\r\n         clearDefault();\r\n      }\r\n   }, [callbackMSR])\r\n\r\n\r\n   if (isValidStudent) {\r\n      if (modal) {\r\n         toggle()\r\n      }\r\n   }\r\n\r\n   if (isValidStudent && callbackMSR) {\r\n      return <Redirect to=\"/student-profile-page\" />\r\n   }\r\n\r\n\r\n   return (\r\n      <div>\r\n         <NavLink onClick={toggle} href='#'>Register as student</NavLink>\r\n         <Modal\r\n            isOpen={modal}\r\n         >\r\n            <ModalHeader toggle={toggle}> Register Form </ModalHeader>\r\n            <ModalBody>\r\n               <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"******\"\r\n                        value={password}\r\n                        onChange={textChange}\r\n                     />\r\n                     <label htmlFor=\"password\">Password:</label>\r\n                  </div>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"confirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"******\"\r\n                        value={confirmPassword}\r\n                        onChange={textChange}\r\n                     />\r\n                     <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n                  </div>\r\n                  <div className=\"form-check mb-3\">\r\n                     <input\r\n                        type=\"checkbox\"\r\n                        name=\"isDE\"\r\n                        className=\"text-black form-check-input mr-3 form-control\"\r\n                        id=\"isDE\"\r\n                        checked={isDE}\r\n                        onChange={textChange}\r\n                     />\r\n                     <label htmlFor=\"isDE\" className=\"form-check-label\">Direct Entry?</label>\r\n                  </div>\r\n                  {\r\n                     isLoading ?\r\n                        <div className=\"my-3\">\r\n                           <MoonLoader size={32} color='#198754' />\r\n                        </div>\r\n                        :\r\n                        <button\r\n                           type=\"submit\"\r\n                           className=\"btn btn-success my-3 px-4 text-capitalize\"\r\n                        >Login</button>\r\n                  }\r\n               </form>\r\n            </ModalBody>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n   isValidStudent: state.mainStudent.isValidStudent,\r\n   isLoading: state.mainStudent.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps, { registerMainStudent })(MainStudentRegister)\r\n","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\FinalRegAction.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\StudentProfilePage.jsx",["209"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Utils\\Loading.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\AcademicStaffReducer.js",["210"],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Pages\\AcadStaffProfilePage.jsx",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\AcademicStaffAction.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\AcademicStaffAuth\\AcademicStaffLogin.jsx",["211"],"import React, { useEffect, useState } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, NavLink } from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { MoonLoader } from 'react-spinners'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { loginAcademicStaff } from '../../../Data/Actions/AcademicStaffAction'\r\n\r\n\r\nconst AcademicStaffLogin = ({ loginAcademicStaff, isAcadStaff, isLoading }) => {\r\n\r\n   let [data, setData] = useState({\r\n      staffID: '',\r\n      password: ''\r\n   })\r\n   let [modal, setModal] = useState(false)\r\n   let [callbackAcadSL, setCallbackAcadSL] = useState(false)\r\n\r\n   let { staffID, password } = data\r\n\r\n   let textChange = name => e => {\r\n      setData({ ...data, [name]: e.target.value })\r\n   }\r\n\r\n   let handleSubmit = async e => {\r\n      e.preventDefault()\r\n      loginAcademicStaff({ staffID, password })\r\n\r\n      setCallbackAcadSL(true)\r\n   }\r\n\r\n   let toggle = () => {\r\n      setModal(!modal)\r\n   }\r\n   let clearDefault = () => {\r\n      setData({\r\n         ...data,\r\n         staffID: '',\r\n         password: ''\r\n      })\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (isAcadStaff && callbackAcadSL) {\r\n         clearDefault()\r\n      }\r\n   }, [callbackAcadSL])\r\n\r\n\r\n   if (isAcadStaff) {\r\n      if (modal) {\r\n         toggle()\r\n      }\r\n   }\r\n\r\n   if (isAcadStaff && callbackAcadSL) {\r\n      return <Redirect to=\"/academic-staff-profile-page\" />\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <NavLink onClick={toggle} href='#'>Login</NavLink>\r\n         <Modal\r\n            isOpen={modal}\r\n         >\r\n            <ModalHeader toggle={toggle}> Login Form </ModalHeader>\r\n            <ModalBody>\r\n               <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"text\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"staffID\"\r\n                        placeholder=\"Your matric number\"\r\n                        value={staffID}\r\n                        onChange={textChange(\"staffID\")}\r\n                     />\r\n                     <label htmlFor=\"staffID\">StaffID:</label>\r\n                  </div>\r\n                  <div className=\"form-floating mb-3\">\r\n                     <input\r\n                        type=\"password\"\r\n                        className=\"form-control text-black\"\r\n                        id=\"password\"\r\n                        placeholder=\"******\"\r\n                        value={password}\r\n                        onChange={textChange('password')}\r\n                     />\r\n                     <label htmlFor=\"password\">Password:</label>\r\n                  </div>\r\n                  {\r\n                     isLoading ?\r\n                        <div className=\"my-3\">\r\n                           <MoonLoader size={32} color='#198754' />\r\n                        </div>\r\n                        :\r\n                        <button\r\n                           type=\"submit\"\r\n                           className=\"btn btn-success my-3 px-4 text-capitalize\"\r\n                        >Login</button>\r\n                  }\r\n               </form>\r\n            </ModalBody>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n   isAcadStaff: state.mainAcadStaff.isAcadStaff,\r\n   isLoading: state.mainAcadStaff.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginAcademicStaff })(AcademicStaffLogin)\r\n","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\DepartmentAction.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Components\\Auth\\AcademicStaffAuth\\AcademicStaffReg.jsx",["212"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DotLoader, MoonLoader } from 'react-spinners';\r\nimport { registerAcademicStaff } from '../../../Data/Actions/AcademicStaffAction';\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\nimport { FaTimes } from 'react-icons/all'\r\n\r\n\r\nconst initialState = {\r\n   firstName: '',\r\n   lastName: '',\r\n   email: '',\r\n   telephone: '',\r\n   department: '',\r\n   dob: '',\r\n   password: ''\r\n}\r\n\r\nconst AcademicStaffRegister = ({ isAcadStaff, isLoading, registerAcademicStaff, departments }) => {\r\n\r\n   const [data, setData] = useState(initialState);\r\n   const { firstName, lastName, email, telephone, dob, department, password } = data\r\n\r\n   const handleDataChange = input => e => {\r\n      setData({ ...data, [input]: e.target.value })\r\n   }\r\n\r\n   const [images, setImages] = useState(false)\r\n   let [loading, setLoading] = useState(false)\r\n   let [callbackAcadSR, setCallbackAcadSR] = useState(false)\r\n   let [avatar, setAvatar] = useState('')\r\n\r\n   let styleUpload = {\r\n      display: images ? \"block\" : \"none\"\r\n   }\r\n\r\n   let handleProfileUpload = async e => {\r\n      e.preventDefault()\r\n\r\n      try {\r\n         let file = e.target.files[0]\r\n         if (!file) return toast.error(\"No Image file included...\")\r\n         if (file.size > 1024 * 1024) return toast.error(\"File size too large, ~= 1mb...\")\r\n         if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') return toast.error(\"File format unaccepted...\")\r\n\r\n         avatar = new FormData()\r\n         avatar.append('avatar', file)\r\n\r\n         setLoading(true)\r\n         const res = await axios.post(`/webminar/upload/profile-picture`, avatar, {\r\n            headers: {\r\n               'content-type': 'multipart/form-data'\r\n            }\r\n         })\r\n         setLoading(false)\r\n         setImages(res.data.msg);\r\n         setAvatar(res.data.msg.avatar)\r\n      } catch (error) {\r\n         toast.error(error.response.data.msg)\r\n      }\r\n   }\r\n\r\n   let handleProfileDestroy = async () => {\r\n      try {\r\n\r\n         setLoading(true)\r\n         let res = await axios.post(`/webminar/destroy/profile-picture`, { avatar_path: `./Public/Images/${avatar}` })\r\n\r\n         setLoading(false)\r\n         setImages(false)\r\n         toast.warning(res.data.msg)\r\n         setAvatar('avatar3.jpg')\r\n      } catch (error) {\r\n         toast.error(error.response.data.msg)\r\n      }\r\n   }\r\n\r\n   let handleSubmit = async e => {\r\n      e.preventDefault()\r\n      registerAcademicStaff({ firstName, lastName, email, telephone, dob, avatar, department, password })\r\n\r\n      setCallbackAcadSR(true)\r\n   }\r\n   let clearDefault = () => {\r\n      setData({\r\n         ...data,\r\n         firstName: '',\r\n         lastName: '',\r\n         email: '',\r\n         telephone: '',\r\n         department: '',\r\n         dob: ''\r\n      });\r\n      setAvatar('')\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (isAcadStaff && callbackAcadSR) {\r\n         clearDefault();\r\n      }\r\n   }, [callbackAcadSR])\r\n\r\n   if (isAcadStaff && callbackAcadSR) {\r\n      return <Redirect to=\"/academic-staff-profile-page\" />\r\n   }\r\n\r\n\r\n   return (\r\n      <div className=\"py-5 reg-form m-auto\">\r\n         <h1 className=\"text-center text-uppercase mb-3\">Registration form</h1>\r\n         <div>\r\n            <div className=\"upload upload2 col-4 mx-auto position-relative p-2\">\r\n               <input\r\n                  className=\"upload-file upload-file2\"\r\n                  type=\"file\"\r\n                  id=\"file_up\"\r\n                  name=\"file\"\r\n                  onChange={handleProfileUpload}\r\n               />\r\n               {\r\n                  loading ?\r\n                     <div className=\"file_img file_img2 d-flex align-items-center justify-content-center\">\r\n                        <DotLoader color=\"#198754\" size={24} />\r\n                     </div>\r\n                     : <div className=\"file_img file_img2\" style={styleUpload}>\r\n                        <img src={images ? `/Images/${avatar}` : ''} alt=\"profile_picture\" />\r\n                        <div className=\"faTimes\" onClick={handleProfileDestroy}>\r\n                           <FaTimes color=\"red\" size={20} />\r\n                        </div>\r\n                     </div>\r\n               }\r\n            </div>\r\n         </div>\r\n         <form className=\"p-4 shadow\" onSubmit={handleSubmit}>\r\n            <div className=\"form-floating mb-3\">\r\n               <input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  id=\"firstName\"\r\n                  placeholder=\"Your FirstName here\"\r\n                  className=\"form-control\"\r\n                  value={firstName}\r\n                  onChange={handleDataChange(\"firstName\")}\r\n               />\r\n               <label htmlFor=\"firstName\" className=\"text-capitalize\">FirstName:</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n               <input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  id=\"lastName\"\r\n                  placeholder=\"Your Surname here\"\r\n                  className=\"form-control\"\r\n                  value={lastName}\r\n                  onChange={handleDataChange(\"lastName\")}\r\n               />\r\n               <label htmlFor=\"lastName\" className=\"text-capitalize\">surname:</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n               <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Your email here\"\r\n                  className=\"form-control\"\r\n                  value={email}\r\n                  onChange={handleDataChange(\"email\")}\r\n               />\r\n               <label htmlFor=\"email\" className=\"text-capitalize\">email:</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n               <input\r\n                  type=\"password\"\r\n                  className=\"form-control text-black\"\r\n                  id=\"password\"\r\n                  placeholder=\"******\"\r\n                  value={password}\r\n                  onChange={handleDataChange('password')}\r\n               />\r\n               <label htmlFor=\"password\">Password:</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n               <input\r\n                  type=\"tel\"\r\n                  name=\"telephone\"\r\n                  id=\"telephone\"\r\n                  placeholder=\"Your telephone here\"\r\n                  className=\"form-control\"\r\n                  value={telephone}\r\n                  onChange={handleDataChange(\"telephone\")}\r\n               />\r\n               <label htmlFor=\"telephone\" className=\"text-capitalize\">telephone:</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n               <input\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  id=\"dob\"\r\n                  placeholder=\"Your dob here\"\r\n                  className=\"form-control\"\r\n                  value={dob}\r\n                  onChange={handleDataChange(\"dob\")}\r\n               />\r\n               <label htmlFor=\"dob\" className=\"text-capitalize\">date of birth:</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n               <select\r\n                  name=\"department\"\r\n                  id=\"department\"\r\n                  value={department}\r\n                  onChange={handleDataChange(\"department\")}\r\n                  className=\"form-select text-black\"\r\n               >\r\n                  <option value=\"\">Choose your department here</option>\r\n                  {\r\n                     departments.map(item => (\r\n                        <option key={item._id} value={item._id}>{item.department}</option>\r\n                     ))\r\n                  }\r\n               </select>\r\n            </div>\r\n            {\r\n               isLoading ?\r\n                  <div className=\"my-3\">\r\n                     <MoonLoader size={32} color='#198754' />\r\n                  </div>\r\n                  :\r\n                  <button\r\n                     type=\"submit\"\r\n                     className=\"btn btn-success my-3 px-4 text-capitalize\"\r\n                  >submit</button>\r\n            }\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   isAcadStaff: state.mainAcadStaff.isAcadStaff,\r\n   isLoading: state.mainAcadStaff.isLoading,\r\n   departments: state.mainDepartment.department\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { registerAcademicStaff })(AcademicStaffRegister)\r\n","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\DepartmentReducer.js",["213"],"import { GET_DEPARTMENT, ADD_DEPARTMENT, DELETE_DEPARTMENT, DEPARTMENT_LOADING, GET_DEPARTMENT_FAIL, ADD_DEPARTMENT_FAIL, DELETE_DEPARTMENT_FAIL, UPDATE_DEPARTMENT_FAIL, UPDATE_DEPARTMENT } from '../Actions/ActionTypes'\r\n\r\n\r\n// Initial State\r\nlet initialState = {\r\n   department: [],\r\n   isLoading: false,\r\n   isValid: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n   let { payload, type } = action\r\n   switch (type) {\r\n      case GET_DEPARTMENT:\r\n         return {\r\n            ...state,\r\n            department: payload,\r\n            isValid: true,\r\n            isLoading: false\r\n         }\r\n      case DELETE_DEPARTMENT:\r\n         return {\r\n            ...state,\r\n            department: state.department.filter(item => item.department_id !== payload),\r\n            isLoading: false\r\n         }\r\n      case ADD_DEPARTMENT:\r\n         return {\r\n            ...state,\r\n            department: [payload, ...state.department]\r\n         }\r\n      case UPDATE_DEPARTMENT:\r\n         return {\r\n            ...state,\r\n            department: [...state.department]\r\n         }\r\n      case DEPARTMENT_LOADING:\r\n         return {\r\n            ...state,\r\n            isLoading: true\r\n         }\r\n      case ADD_DEPARTMENT_FAIL:\r\n      case DELETE_DEPARTMENT_FAIL:\r\n      case GET_DEPARTMENT_FAIL:\r\n      case UPDATE_DEPARTMENT_FAIL:\r\n         return {\r\n            ...state,\r\n            isLoading: false,\r\n            isValid: false\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}","C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Actions\\CoursesAction.js",[],"C:\\Users\\IFEOLUWA\\Desktop\\Scripts\\Full Stack\\Practical School\\client\\src\\Data\\Reducer\\CoursesReducer.js",["214"],"import { GET_COURSES, ADD_COURSES, DELETE_COURSES, COURSES_LOADING, GET_COURSES_FAIL, ADD_COURSES_FAIL, DELETE_COURSES_FAIL, UPDATE_COURSES_FAIL, UPDATE_COURSES, GET_USER_COURSES, GET_USER_COURSES_FAIL } from '../Actions/ActionTypes'\r\n\r\n\r\n// Initial State\r\nlet initialState = {\r\n   courses: [],\r\n   myCourse: [],\r\n   isMyCourse: null,\r\n   isLoading: false,\r\n   isValid: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n   let { payload, type } = action\r\n   switch (type) {\r\n      case GET_COURSES:\r\n         return {\r\n            ...state,\r\n            courses: payload,\r\n            isValid: true,\r\n            isLoading: false\r\n         }\r\n      case DELETE_COURSES:\r\n         return {\r\n            ...state,\r\n            courses: state.courses.filter(item => item.courses_id !== payload),\r\n            isLoading: false\r\n         }\r\n      case ADD_COURSES:\r\n         return {\r\n            ...state,\r\n            courses: [payload, ...state.courses]\r\n         }\r\n      case UPDATE_COURSES:\r\n         return {\r\n            ...state,\r\n            courses: [...state.courses]\r\n         }\r\n      case COURSES_LOADING:\r\n         return {\r\n            ...state,\r\n            isLoading: true\r\n         }\r\n      case GET_USER_COURSES:\r\n         return {\r\n            ...state,\r\n            myCourse: payload,\r\n            isMyCourse: true,\r\n            isLoading: false\r\n         }\r\n      case GET_USER_COURSES_FAIL:\r\n         return {\r\n            ...state,\r\n            myCourse: null,\r\n            isMyCourse: false,\r\n            isLoading: false\r\n         }\r\n      case ADD_COURSES_FAIL:\r\n      case DELETE_COURSES_FAIL:\r\n      case GET_COURSES_FAIL:\r\n      case UPDATE_COURSES_FAIL:\r\n         return {\r\n            ...state,\r\n            isLoading: false,\r\n            isValid: false\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"215","replacedBy":"221"},{"ruleId":"217","replacedBy":"222"},{"ruleId":"215","replacedBy":"223"},{"ruleId":"217","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":5,"column":8,"nodeType":"227","messageId":"228","endLine":5,"endColumn":9},{"ruleId":"215","replacedBy":"229"},{"ruleId":"217","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":12,"column":1,"nodeType":"233","endLine":50,"endColumn":2},{"ruleId":"215","replacedBy":"234"},{"ruleId":"217","replacedBy":"235"},{"ruleId":"215","replacedBy":"236"},{"ruleId":"217","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":37,"column":7,"nodeType":"240","endLine":37,"endColumn":21,"suggestions":"241"},{"ruleId":"231","severity":1,"message":"232","line":13,"column":1,"nodeType":"233","endLine":51,"endColumn":2},{"ruleId":"238","severity":1,"message":"242","line":102,"column":7,"nodeType":"240","endLine":102,"endColumn":20,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"239","line":43,"column":7,"nodeType":"240","endLine":43,"endColumn":20,"suggestions":"244"},{"ruleId":"225","severity":1,"message":"245","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":15},{"ruleId":"238","severity":1,"message":"246","line":46,"column":7,"nodeType":"240","endLine":46,"endColumn":20,"suggestions":"247"},{"ruleId":"238","severity":1,"message":"246","line":54,"column":7,"nodeType":"240","endLine":54,"endColumn":20,"suggestions":"248"},{"ruleId":"238","severity":1,"message":"249","line":113,"column":7,"nodeType":"240","endLine":113,"endColumn":24,"suggestions":"250"},{"ruleId":"231","severity":1,"message":"232","line":12,"column":1,"nodeType":"233","endLine":50,"endColumn":2},{"ruleId":"238","severity":1,"message":"251","line":46,"column":7,"nodeType":"240","endLine":46,"endColumn":23,"suggestions":"252"},{"ruleId":"238","severity":1,"message":"251","line":103,"column":7,"nodeType":"240","endLine":103,"endColumn":23,"suggestions":"253"},{"ruleId":"231","severity":1,"message":"232","line":11,"column":1,"nodeType":"233","endLine":54,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":13,"column":1,"nodeType":"233","endLine":70,"endColumn":2},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],["254"],["255"],["254"],["255"],["254"],["255"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar",["254"],["255"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["254"],["255"],["254"],["255"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'isRegID'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.","ArrayExpression",["256"],"React Hook useEffect has missing dependencies: 'clearDefault' and 'isRegID'. Either include them or remove the dependency array.",["257"],["258"],"'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'clearDefault' and 'isValidStudent'. Either include them or remove the dependency array.",["259"],["260"],"React Hook useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'clearDefault' and 'isAcadStaff'. Either include them or remove the dependency array.",["262"],["263"],"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [callbackTest, data, isRegID]",{"range":"280","text":"281"},"Update the dependencies array to be: [callbackPSR, clearDefault, isRegID]",{"range":"282","text":"283"},"Update the dependencies array to be: [callbackPSL, data, isRegID]",{"range":"284","text":"285"},"Update the dependencies array to be: [callbackMSL, clearDefault, isValidStudent]",{"range":"286","text":"287"},"Update the dependencies array to be: [callbackMSR, clearDefault, isValidStudent]",{"range":"288","text":"289"},"Update the dependencies array to be: [handleSubmit, level, semester]",{"range":"290","text":"291"},"Update the dependencies array to be: [callbackAcadSL, clearDefault, isAcadStaff]",{"range":"292","text":"293"},"Update the dependencies array to be: [callbackAcadSR, clearDefault, isAcadStaff]",{"range":"294","text":"295"},[964,978],"[callbackTest, data, isRegID]",[2983,2996],"[callbackPSR, clearDefault, isRegID]",[1113,1126],"[callbackPSL, data, isRegID]",[1174,1187],"[callbackMSL, clearDefault, isValidStudent]",[1575,1588],"[callbackMSR, clearDefault, isValidStudent]",[3310,3327],"[handleSubmit, level, semester]",[1189,1205],"[callbackAcadSL, clearDefault, isAcadStaff]",[3076,3092],"[callbackAcadSR, clearDefault, isAcadStaff]"]